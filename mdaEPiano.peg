#ifndef mdaEPiano_peg
#define mdaEPiano_peg


#ifndef PEG_STRUCT
#define PEG_STRUCT
typedef struct {
  float min;
  float max;
  float default_value;
  char toggled;
  char integer;
  char logarithmic;
} peg_data_t;
#endif

/* <http://rekado.wurmus.de/lv2/mdaEPiano> */

static const char p_uri[] = "http://rekado.wurmus.de/lv2/mdaEPiano";

enum p_port_enum {
  p_midi,
  p_left,
  p_right,
  p_envelope_decay,
  p_envelope_release,
  p_hardness,
  p_treble_boost,
  p_modulation,
  p_lfo_rate,
  p_velocity_sensitivity,
  p_stereo_width,
  p_polyphony,
  p_fine_tuning,
  p_random_tuning,
  p_overdrive,
  p_n_ports
};

static const peg_data_t p_ports[] = {
  { -3.40282e+38, 3.40282e+38, -3.40282e+38, 0, 0, 0 }, 
  { -3.40282e+38, 3.40282e+38, -3.40282e+38, 0, 0, 0 }, 
  { -3.40282e+38, 3.40282e+38, -3.40282e+38, 0, 0, 0 }, 
  { 0, 1, 0.5, 0, 0, 0 }, 
  { 0, 1, 0.5, 0, 0, 0 }, 
  { 0, 1, 0.5, 0, 0, 0 }, 
  { 0, 1, 0.5, 0, 0, 0 }, 
  { 0, 1, 0.5, 0, 0, 0 }, 
  { 0, 1, 0.65, 0, 0, 0 }, 
  { 0, 1, 0.25, 0, 0, 0 }, 
  { 0, 1, 0.5, 0, 0, 0 }, 
  { 0, 1, 0.5, 0, 0, 0 }, 
  { 0, 1, 0.5, 0, 0, 0 }, 
  { 0, 1, 0.146, 0, 0, 0 }, 
  { 0, 1, 0, 0, 0, 0 }, 
};


#endif /* mdaEPiano_peg */
